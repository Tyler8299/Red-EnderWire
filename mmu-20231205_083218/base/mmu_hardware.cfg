#BTT MMB CONFIGURATION

#[mcu mmu]
#canbus_uuid=52658d5e55a1
#serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_2E003A001550425539393020-if00	


# FILAMENT DRIVE GEAR STEPPER  ---------------------------------------------------------------------------------------------


# EZ Driver1
[tmc2209 stepper_mmu_gear]
uart_pin: mmu:PA10
#uart_address: 0 			
interpolate: True
run_current: 0.5			
hold_current: 0.1			
sense_resistor: 0.110			
stealthchop_threshold: 0		
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 20
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 1
driver_HSTRT: 3
driver_PWM_AUTOGRAD: True
driver_PWM_AUTOSCALE: True
driver_PWM_LIM: 12
driver_PWM_REG: 8
driver_PWM_FREQ: 1
driver_PWM_GRAD: 14
driver_PWM_OFS: 36
#
# Uncomment two lines below if you have TMC and want the ability to use filament "touch" homing with gear stepper
#diag_pin: ^mmu:PA3		# Set to MCU pin connected to TMC DIAG pin for gear stepper
#driver_SGTHRS: 60			# 255 is most sensitive value, 0 is least sensitive


#[tmc2209 ez_driver1]
[stepper_mmu_gear]
step_pin: mmu:PB15
dir_pin: mmu:PB14
enable_pin: !mmu:PA8
rotation_distance: 22.7316868		
gear_ratio: 80:20			        # ERCF 80:20
microsteps: 16 				
full_steps_per_rotation: 200		# 200 for 1.8 degree, 400 for 0.9 degree
#
# Uncomment the two lines below to enable filament "touch" homing option with gear motor
#extra_endstop_pins: tmc2209_stepper_mmu_gear:virtual_endstop
#extra_endstop_names: mmu_gear_touch


# SELECTOR STEPPER  --------------------------------------------------------------------------------------------------------


# EZ Driver2
[tmc2209 stepper_mmu_selector]
uart_pin: mmu:PC7
#uart_address: 1 			
run_current: 0.45			
hold_current: 0.2			
interpolate: True
sense_resistor: 0.110
stealthchop_threshold: 100		# Stallguard homing (slower speeds) best done with stealthchop
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 20
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 1
driver_HSTRT: 3
driver_PWM_AUTOGRAD: True
driver_PWM_AUTOSCALE: True
driver_PWM_LIM: 12
driver_PWM_REG: 8
driver_PWM_FREQ: 1
driver_PWM_GRAD: 14
driver_PWM_OFS: 36
#
# Uncomment two lines below if you have TMC and want to use selector "touch" movement and homing
#diag_pin: ^mmu:PC7 		# Set to MCU pin connected to TMC DIAG pin for selector stepper
#driver_SGTHRS: 75			# 255 is most sensitive value, 0 is least sensitive


#[tmc2209 ez_driver2]
[stepper_mmu_selector]
step_pin: mmu:PD2
dir_pin: mmu:PB13
enable_pin: !mmu:PD1
rotation_distance: 40
microsteps: 16 				        
full_steps_per_rotation: 200		# 200 for 1.8 degree, 400 for 0.9 degree
endstop_pin: ^mmu:PA3                  
endstop_name: mmu_sel_home
#
# Uncomment two lines below to give option of  selector "touch" movement and homing
#extra_endstop_pins: tmc2209_stepper_mmu_selector:virtual_endstop
#extra_endstop_names: mmu_sel_touch


# SELECTOR SERVO -----------------------------------------------------------------------------------------------------------
# Basic servo PWM setup. If these values are changed then the angles defined for different positions will also change


[mmu_servo mmu_servo]
pin: mmu:PA0
maximum_servo_angle: 180
minimum_pulse_width: 0.00085
maximum_pulse_width: 0.00215


# ENCODER -----------------------------------------------------------------------------------------------------------------
# Encoder measures distance, monitors for runout and clogging and constantly calculates % flow rate
# Note that the encoder_resolution set if is purely a default to get started.  It is set through calibration
# and stored in mmu_vars.cfg


[mmu_encoder mmu_encoder]
encoder_pin: ^mmu:PA1		
encoder_resolution: 1.0			
desired_headroom: 5.0			# The clog/runout headroom that MMU will attempt to maintain (closest MMU comes to triggering runout)
average_samples: 4		    	# The "damping" effect of last measurement. Higher value means clog_length will be reduced more slowly
flowrate_samples: 20			# How many "movements" on the encoder to measure over for flowrate calc


# FILAMENT SENSORS ---------------------------------------------------------------------------------------------------------
# Define the pins for (shared) sensors in the filament path. These will be automatically setup as both endstops (for homing)
# and sensors for visibility purposes. Note that if your MMU has sensors at each gate then these should be defined as endstops
# on each of the gear steppers
#
# Optional 'toolhead' sensor detects filament after extruder entry
# Optional 'extruder' sensor detects filament just before the extruder entry
# Optional shared 'gate' sensor detects filament at the gate of the MMU

[filament_switch_sensor toolhead_sensor]
switch_pin: ^EBBCan: PB7

[filament_switch_sensor extruder_sensor]
switch_pin: ^EBBCan: PB5

#[filament_switch_sensor gate_sensor]
#switch_pin: 


#######################################
# Neopixels                           #
#######################################


#[neopixel CottonTail]
#pin: mmu:PA2
#chain_count: 6
#color_order: GRB
#initial_RED: 1
#initial_GREEN: 1 
#initial_BLUE: 1
##initial_White: 0
#
#[led_effect panel_idle]
#autostart:              true
#frame_rate:             60
#leds:
#    neopixel:CottonTail
#layers:
#    breathing  10 1 top (1,1,1)


########################################
# STEPPER configuration                #
########################################


# EZ Driver3
#[ez_driver3]
#step_pin: mmu:PD0
#dir_pin: mmu:PD3
#enable_pin: !mmu:PA15
#microsteps: 16
#rotation_distance: 40
#full_steps_per_rotation: 200

# EZ Driver4
#[ez_driver4]
#step_pin: mmu:PB6
#dir_pin: mmu:PB7
#enable_pin: !mmu:PB5
#microsteps: 16
#rotation_distance: 40
#full_steps_per_rotation: 200


########################################
# TMC2209 configuration                # 
########################################


#[tmc2209 ez_driver3]
#uart_pin: MMB:PC6
##diag_pin: MMB:PB9
#run_current: 0.800
#hold_current: 0.1
#interpolate: True
#sense_resistor: 0.110
#stealthchop_threshold: 999999
#driver_IHOLDDELAY: 8
#driver_TPOWERDOWN: 20
#driver_TBL: 2
#driver_TOFF: 3
#driver_HEND: 1
#driver_HSTRT: 3
#driver_PWM_AUTOGRAD: True
#driver_PWM_AUTOSCALE: True
#driver_PWM_LIM: 12
#driver_PWM_REG: 8
#driver_PWM_FREQ: 1
#driver_PWM_GRAD: 14
#driver_PWM_OFS: 36
#driver_SGTHRS: 0

#[tmc2209 ez_driver4]
#uart_pin: MMB:PA9
##diag_pin: MMB:PB8
#run_current: 0.800
#hold_current: 0.1
#interpolate: True
#sense_resistor: 0.110
#stealthchop_threshold: 999999
#driver_IHOLDDELAY: 8
#driver_TPOWERDOWN: 20
#driver_TBL: 2
#driver_TOFF: 3
#driver_HEND: 1
#driver_HSTRT: 3
#driver_PWM_AUTOGRAD: True
#driver_PWM_AUTOSCALE: True
#driver_PWM_LIM: 12
#driver_PWM_REG: 8
#driver_PWM_FREQ: 1
#driver_PWM_GRAD: 14
#driver_PWM_OFS: 36
#driver_SGTHRS: 0


#######################################
# Additional Sensors                  #
#######################################


#[gcode_button sensor]
#pin: mmu:PA1

# FILAMENT SENSORS ---------------------------------------------------------------------------------------------------------
# Define the pins for optional sensors in the filament path. All but the pre-gate sensors will be automatically setup as
# both endstops (for homing) and sensors for visibility purposes.
#
# pre_gate_switch_pin_X: pre-gate sensor detects filament at entry to MMU. X=gate number (0..N)
# toolhead_switch_pin: 'toolhead' sensor detects filament after extruder entry
# extruder_switch_pin: 'extruder' sensor detects filament just before the extruder entry
# gate_switch_pin: shared 'gate' sensor detects filament at the gate of the MMU
#
# Uncomment sensors that are fitted
#
[mmu_sensors]
pre_gate_switch_pin_0: mmu:PA4
pre_gate_switch_pin_1: mmu:PB8
pre_gate_switch_pin_2: mmu:PC15
pre_gate_switch_pin_3: mmu:PC13
pre_gate_switch_pin_4: mmu:PC14
pre_gate_switch_pin_5: mmu:PB12
pre_gate_switch_pin_6: mmu:PB11
pre_gate_switch_pin_7: mmu:PB10
#pre_gate_switch_pin_8:mmu:PB7 NOT WORKING

#gate_switch_pin: mmu:MMU_GATE_SENSOR
#extruder_switch_pin: EXTRUDER_SENSOR
#toolhead_switch_pin: TOOLHEAD_SENSOR

# MMU OPTIONAL NEOPIXEL LED SUPPORT ----------------------------------------------------------------------------------------
#
# Define neopixel LEDs for your MMU. The chain_count should match or be greater than your number of gates.
# Requires the installation of Julian Schill's awesome LED effect module: https://github.com/julianschill/klipper-led_effect
# LED index 1..N should be connected from gate #0 to gate #N
# LED index N+1 can optionally be connected to exit from MMU (like encoder in ERCF design)
#
[neopixel mmu_leds]
pin: mmu:MMU_NEOPIXEL
chain_count: 9				# Number gates + 1 (if you want exit effect)
color_order: GRB			# Set based on your particular neopixel specification

#
# Define LED effects for MMU gate. 'mmu_led_effect' is a wrapper for led_effect
# (if included on your system) and will accept and create the defined effect on both
# the entire specified part of the strip with the name you supply but also on each
# individual LED up to N+1 gates by adding `_<gate+1>` suffix. This makes it much
# easier to have per gate effects.
#
# E.g. You define mmu_flash on a 3 gate MMU:
#  [mmu_led_effect mmu_flash]
#
# This will create effects:
#  mmu_flash on whole define strip
#  mmu_flash_1 on for gate 0 (LED index 1)
#  mmu_flash_2 on for gate 1 (LED index 2)
#  mmu_flash_3 on for gate 2 (LED index 3)
#  mmu_flash_4 for MMU exit  (LED index 4)
#
# Then you can set effects with commands like:
#  SET_LED_EFFECT EFFECT=_mmu_flash      # apply effect to all leds in strip
#  SET_LED_EFFECT EFFECT=_mmu_flash_1    # apply effect to the second led (gate 0)
#
# or set simple RBGW color with commands like:
#  SET_LED LED=mmu_led INDEX=2 RED=50 GREEN=50 BLUE=50 WHITE=0 TRANSMIT=1
#
# Note that gates start from 0, LED index starts from 1, so by default, index = gate + 1
# Ranges are constrained as much as possible to allow for additional custom LEDs
# to be wired after the N+1 position
#
[mmu_led_effect mmu_breathing_red]
frame_rate: 24
leds:       neopixel:mmu_leds (1-8)
layers:     breathing 4 0 top (1, 0, 0)

[mmu_led_effect mmu_pulsing_white_slow]
frame_rate: 24
leds:       neopixel:mmu_leds (1-8)
layers:     breathing 1.0 0 top (1, 1, 1)

[mmu_led_effect mmu_strobe]
frame_rate: 24
leds:       neopixel:mmu_leds (1-8)
layers:     strobe    1 1.5 add (1.0,  1.0, 1.0)
            breathing 2 0   difference (0.95, 0.0, 0.0)
            static    0 0   top (1.0,  0.0, 0.0)

# These are only used selectively on gate LEDs for gate status
[mmu_led_effect mmu_green]
frame_rate: 12
leds:       neopixel:mmu_leds (1-8)
layers:     static 0 0 top (0.0, 0.5, 0.0)

[mmu_led_effect mmu_orange]
frame_rate: 12
leds:       neopixel:mmu_leds (1-8)
layers:     static 0 0 top (0.5, 0.2, 0.0)

# These only on all gates at one, hence just `led_effect` definition...
[led_effect mmu_curtain]
frame_rate: 24
leds:       neopixel:mmu_leds (1-8)
layers:     comet  1 0.7 add (0.7, 0.7, 0.7),(0.7, 0.0, 0.0)
            comet -1 0.7 top (0.7, 0.7, 0.7),(0.0, 0.0, 0.7)

[led_effect mmu_sparkle]
frame_rate: 24
leds:       neopixel:mmu_leds (1-8)
layers:     twinkle 8 0.15 top (0.3, 0.3, 0.3), (0.4, 0.0, 0.25)

[led_effect mmu_pulsing_white_fast]
frame_rate: 24
leds:       neopixel:mmu_leds (1-8)
layers:     breathing 0.6 0 top (0.3, 0.3, 0.3)

